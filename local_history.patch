Index: app/src/main/java/com/example/peter/calculator/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/peter/calculator/MainActivity.java	(date 1526268925511)
+++ app/src/main/java/com/example/peter/calculator/MainActivity.java	(date 1526268925511)
@@ -5,6 +5,7 @@
 import android.view.View;
 import android.widget.Button;
 import android.widget.TextView;
+import java.util.*;
 
 public class MainActivity extends AppCompatActivity {
 
@@ -37,6 +38,7 @@
     private double val2;
     private char ACTION;
 
+    ArrayList terms = new ArrayList();
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -132,40 +134,44 @@
         add.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                compute();
-                ACTION = ADDITION;
-                display.setText(String.valueOf(val1) + "+");
-                info.setText(null);
+                // compute();
+                // ACTION = ADDITION;
+                // display.setText(String.valueOf(val1) + "+");
+                info.setText(info.getText().toString() + "+");
+                // info.setText(null);
             }
         });
 
         sub.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                compute();
-                ACTION = SUBTRACTION;
-                display.setText(String.valueOf(val1) + "-");
-                info.setText(null);
+                // compute();
+                // ACTION = SUBTRACTION;
+                // display.setText(String.valueOf(val1) + "-");
+                info.setText(info.getText().toString() + "-");
+                // info.setText(null);
             }
         });
 
         div.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                compute();
-                ACTION = DIVISION;
-                display.setText(String.valueOf(val1) + "/");
-                info.setText(null);
+                // compute();
+                // ACTION = DIVISION;
+                // display.setText(String.valueOf(val1) + "/");
+                info.setText(info.getText().toString() + "/");
+                // info.setText(null);
             }
         });
 
         mul.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                compute();
-                ACTION = MULTIPLICATION;
-                display.setText(String.valueOf(val1) + "*");
-                info.setText(null);
+                // compute();
+                // ACTION = MULTIPLICATION;
+                // display.setText(String.valueOf(val1) + "*");
+                info.setText(info.getText().toString() + "*");
+                // info.setText(null);
             }
         });
 
@@ -173,7 +179,7 @@
             @Override
             public void onClick(View v) {
                 compute();
-                ACTION = EQUALS;
+                // ACTION = EQUALS;
                 display.setText(String.valueOf(val1));
                 info.setText(null);
             }
@@ -216,6 +222,8 @@
         sub = (Button)findViewById(R.id.btnsub);
         equal = (Button)findViewById(R.id.btneq);
         clear = (Button)findViewById(R.id.btnclr);
+        bracketLeft = (Button)findViewById(R.id.bracketLeft);
+        bracketRight = (Button)findViewById(R.id.bracketRight);
         info = (TextView)findViewById(R.id.tvControl);
         display = (TextView)findViewById(R.id.tvDisplay);
 
@@ -223,6 +231,22 @@
     }
 
     private void compute(){
+        for(int i = 0; i < info.getText().toString().length(); i++){
+            terms.add(info.getText().toString().charAt(i));
+        }
+        while(terms.indexOf('(') != -1){
+            terms.remove(terms.indexOf('('));
+        }
+        while(terms.indexOf(')') != -1 ){
+            terms.remove(terms.indexOf(')'));
+        }
+        int length = info.getText().toString().length();
+        for(int i = 0; i < length; i++){
+            switch(info.getText().toString().charAt(i)){
+                case '*'
+            }
+        }
+        /*
         try {
             if(!Double.isNaN(val1)){
                 val2 = Double.parseDouble(info.getText().toString());
@@ -254,6 +278,7 @@
         } catch (NumberFormatException e){
             e.printStackTrace();
         }
-
+    */
     }
+
 }
